plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

group = project.group
version = project.mod_version
archivesBaseName = project.mod_id

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

minecraft {
    mappings channel: 'official', version: project.mc_version

    runs {
        client {
            workingDirectory project.file('run')
            args '--username', 'Dev'

            // Add these JVM arguments for mixin debugging (from gradle.properties)
            if (project.hasProperty('mixin.debug') && project.property('mixin.debug').toBoolean()) {
                jvmArgs '-Dmixin.debug=true', '-Dmixin.debug.verbose=true'
            }

            mods {
                "${project.mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${project.mod_id}.refmap.json"
    config "${project.mod_id}.mixins.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    implementation "org.spongepowered:mixin:0.8.5"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

jar {
    manifest {
        attributes([
                'Specification-Title': project.mod_id,
                'Specification-Vendor': 'JonasPfi',
                'Specification-Version': '1',
                'Implementation-Title': project.mod_id,
                'Implementation-Version': project.mod_version,
                'Implementation-Vendor': 'JonasPfi',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': "${project.mod_id}.mixins.json"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

configurations {
    shade
    implementation.extendsFrom shade
}